C:\Users\abbey\mConnect\Apps\go\packages\mccrud>go test
Running Test:  should delete two records by Ids and return success:
================================================
delete-by-ids: Request completed successfully : 200
Passed

Failed [Test-Case: should delete two records by Ids and return success:]: delete-by-id records should be 2 => Expected true, Got fals
e
Summary for Test  should delete two records by Ids and return success: :
Test Passed:  1
Test Failed:  1
Total Test:  2
Running Test:  should delete two records by query-params and return success:
================================================
delete-by-params: Request completed successfully : 200
Passed

Failed [Test-Case: should delete two records by query-params and return success:]: deleted records should be 2 => Expected true, Got
false
Summary for Test  should delete two records by query-params and return success: :
Test Passed:  1
Test Failed:  1
Total Test:  2
Running Test:  should delete all table records and return success:
================================================
delete-all: Request completed successfully : 200
Passed
Passed
Summary for Test  should delete all table records and return success: :
Test Passed:  2
Test Failed:  0
Total Test:  2
============================
All Tests Summary Stats:
============================
Test Passed:  4
Test Failed:  2
Total Test:  6
***** Test Completed *****
--- FAIL: TestDelete (0.62s)
    mcTest.go:43:
        Failed [Test-Case: should delete two records by Ids and return success:]: delete-by-id records should be 2 => Expected true,
Got false
    mcTest.go:43:
        Failed [Test-Case: should delete two records by query-params and return success:]: deleted records should be 2 => Expected tr
ue, Got false
Running Test:  should connect to the Audit-DB and return an instance object:
================================================
Passed
Passed
Summary for Test  should connect to the Audit-DB and return an instance object: :
Test Passed:  2
Test Failed:  0
Total Test:  2
Running Test:  should connect to the CRUD-object and return an instance object:
================================================
Passed
Summary for Test  should connect to the CRUD-object and return an instance object: :
Test Passed:  1
Test Failed:  0
Total Test:  1
Running Test:  should create two new records and return success:
================================================
before log-insert
after log-insert: result => INSERT 0 1 | err => <nil>
Request completed successfully | Audit-log-code: success | Message: Request completed successfully | successful audit-log action 200
Passed
Passed
Passed
Passed
Summary for Test  should create two new records and return success: :
Test Passed:  4
Test Failed:  0
Total Test:  4
Running Test:  should update two records and return success:
================================================
updates: Error updating information/record(s) | Error computing update-query: Invalid action-params [2] : 304

Failed [Test-Case: should update two records and return success:]: update should return code: success => Expected success, Got update
Error

Failed [Test-Case: should update two records and return success:]: updated records should be 2 => Expected true, Got false
Summary for Test  should update two records and return success: :
Test Passed:  0
Test Failed:  2
Total Test:  2
Running Test:  should update two records by Ids and return success:
================================================
update-by-ids: Error updating information/record(s) | Error computing update-query: Invalid action-params [1] : 304

Failed [Test-Case: should update two records by Ids and return success:]: update-by-id should return code: success => Expected succes
s, Got updateError

Failed [Test-Case: should update two records by Ids and return success:]: updated-by-id records should be 2 => Expected true, Got fal
se
Summary for Test  should update two records by Ids and return success: :
Test Passed:  0
Test Failed:  2
Total Test:  2
Running Test:  should update two records by query-params and return success:
================================================
update-by-params-query: UPDATE audits_test1 SET table_name='services3',  log_type='update',  log_by='085f48c5-8763-4e22-a1c6-ac1a68ba
07de',  log_at='2021-01-10 00:23:44.052256',  log_records='{"cost":1000,"desc":"Testing only200","name":"Abi200","priority":1,"url":"
localhost:9000"}',  new_log_records='{"cost":2000,"desc":"Testing only - updated","name":"Abi Akindele","priority":1,"url":"localhost
:9900"}' WHERE  (id='57d58438-2941-40f2-8e6f-c9e4539dab3e' AND log_type='create')
update-by-params: Request completed successfully : 200
Passed

Failed [Test-Case: should update two records by query-params and return success:]: updated-by-params records should be 2 => Expected
true, Got false
Summary for Test  should update two records by query-params and return success: :
Test Passed:  1
Test Failed:  1
Total Test:  2
============================
All Tests Summary Stats:
============================
Test Passed:  8
Test Failed:  5
Total Test:  13
***** Test Completed *****
--- FAIL: TestSave (0.08s)
    mcTest.go:43:
        Failed [Test-Case: should update two records and return success:]: update should return code: success => Expected success, Go
t updateError
    mcTest.go:43:
        Failed [Test-Case: should update two records and return success:]: updated records should be 2 => Expected true, Got false
    mcTest.go:43:
        Failed [Test-Case: should update two records by Ids and return success:]: update-by-id should return code: success => Expecte
d success, Got updateError
    mcTest.go:43:
        Failed [Test-Case: should update two records by Ids and return success:]: updated-by-id records should be 2 => Expected true,
 Got false
    mcTest.go:43:
        Failed [Test-Case: should update two records by query-params and return success:]: updated-by-params records should be 2 => E
xpected true, Got false
FAIL
exit status 1
FAIL    github.com/abbeymart/mccrud     3.223s
